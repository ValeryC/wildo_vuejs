{"remainingRequest":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/src/views/Home.vue?vue&type=style&index=0&id=fae5bece&scoped=true&lang=css&","dependencies":[{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/src/views/Home.vue","mtime":1602613302488},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.card .card-content .card-title {\n  margin-bottom: 0;\n}\n.card .card-content p.timestamp {\n  color: #999;\n  margin-bottom: 10px;\n}\n.delete-btn {\n  color: red !important;\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col s6\">\n        <!-- Form -->\n        <PostForm @postCreated=\"addPost\" :editingPost=\"editingPost\"/>\n      </div>\n      <div class=\"col s3\" style=\"margin:50px;\">\n        <p>Limit number of posts</p>\n        <input type=\"number\" v-model=\"postLimit\">\n        <button @click=\"setLimit()\" class=\"waves-effect waves-light btn\">Set</button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div\n        class=\"col s6\"\n        v-for=\"(post, index) in posts\"\n        v-bind:item=\"post\"\n        :index=\"index\"\n        :key=\"post.id\"\n      >\n        <div class=\"card\">\n          <div class=\"card-content\">\n            <p class=\"card-title\">{{ post.title }}</p>\n            <p class=\"timestamp\">{{ post.createdAt | formatDate }}</p>\n            <p>{{ post.body }}</p>\n          </div>\n          <div class=\"card-action\">\n            <a href=\"#\" @click=\"editPost(post)\">Edit</a>\n            <a href=\"#\" class=\"delete-btn\" @click=\"deletePost(post.id)\">Delete</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostService from \"../PostService\";\nimport PostForm from \"../components/PostForm.vue\";\nconst postService = new PostService();\n\nexport default {\n  name: \"Home\",\n  components: {\n    PostForm\n  },\n  data() {\n    return {\n      posts: [],\n      postLimit: 5,\n      editingPost: null\n    };\n  },\n  methods: {\n    addPost(post) {\n      if (this.posts.find(p => p.id === post.id)) {\n        const index = this.posts.findIndex(p => p.id === post.id);\n        this.posts.splice(index, 1, post);\n      } else this.posts.unshift(post);\n    },\n    editPost(post) {\n      this.editingPost = post;\n    },\n    deletePost(id) {\n      postService\n        .deletePost(id)\n        .then(() => {\n          this.posts = this.posts.filter(p => p.id !== id);\n        })\n        .catch(err => console.error(err));\n    },\n    setLimit() {\n      postService\n        .getPosts(this.postLimit)\n        .then(res => (this.posts = res.data))\n        .catch(err => console.error(err));\n    }\n  },\n  created() {\n    postService\n      .getAllPosts()\n      .then(res => {\n        this.posts = res.data;\n        console.log(this.posts);\n      })\n      .catch(err => console.error(err));\n  },\n  filters: {\n    formatDate(date) {\n      date = new Date(date);\n      const day = date.getDate();\n      const month = date.getMonth() + 1;\n      const year = date.getFullYear();\n\n      return `${day}-${month}-${year}`;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.card .card-content .card-title {\n  margin-bottom: 0;\n}\n.card .card-content p.timestamp {\n  color: #999;\n  margin-bottom: 10px;\n}\n.delete-btn {\n  color: red !important;\n}\n</style>\n"]}]}