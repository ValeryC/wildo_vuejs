{"remainingRequest":"/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/src/views/Portefolio.vue?vue&type=template&id=26ff9242&scoped=true&","dependencies":[{"path":"/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/src/views/Portefolio.vue","mtime":1602958602697},{"path":"/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1602584955578},{"path":"/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1602584960737},{"path":"/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1602584955578},{"path":"/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1602584960737}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}