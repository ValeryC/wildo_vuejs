{"remainingRequest":"/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/src/views/Portefolio.vue?vue&type=template&id=26ff9242&scoped=true&","dependencies":[{"path":"/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/src/views/Portefolio.vue","mtime":1602959287018},{"path":"/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/wildo_vuejs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}