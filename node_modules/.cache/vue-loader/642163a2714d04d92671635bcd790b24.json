{"remainingRequest":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/src/components/PostForm.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/src/components/PostForm.vue","mtime":1602613302488},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.form {\n  margin: 50px;\n}\n.progress {\n  margin: 100px 0;\n}\n",{"version":3,"sources":["PostForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA;AACA;AACA","file":"PostForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <form v-if=\"!loading\" class=\"form\" @submit.prevent=\"onSubmit\">\n    <div class=\"input-field\">\n      <label for=\"title\">Title</label>\n      <input\n        type=\"text\"\n        name=\"title\"\n        v-model=\"title\"\n        :class=\"[errors.title ? 'invalid' : 'validate']\"\n      >\n      <span class=\"helper-text\" data-error=\"Title must not be empty\"></span>\n    </div>\n    <div class=\"input-field\">\n      <label for=\"body\">Body</label>\n      <input type=\"text\" name=\"body\" v-model=\"body\" :class=\"[errors.body ? 'invalid' : 'validate']\">\n      <span class=\"helper-text\" data-error=\"Body must not be empty\"></span>\n    </div>\n    <button type=\"submit\" class=\"waves-effect waves-light btn\">{{ id ? 'Update' : 'Add'}}</button>\n  </form>\n  <div class=\"progress\" v-else-if=\"loading\">\n    <div class=\"indeterminate\"></div>\n  </div>\n</template>\n\n<script>\nimport PostService from \"../PostService\";\nconst postService = new PostService();\n\nexport default {\n  name: \"PostForm\",\n  props: {\n    editingPost: Object\n  },\n  data() {\n    return {\n      loading: false,\n      title: \"\",\n      body: \"\",\n      id: null,\n      errors: {}\n    };\n  },\n  methods: {\n    onSubmit() {\n      this.loading = true;\n      if (!this.validForm()) {\n        this.loading = false;\n        return;\n      }\n      const post = {\n        title: this.title,\n        body: this.body,\n        id: this.id\n      };\n\n      postService\n        .writePost(post)\n        .then(res => {\n          this.loading = false;\n          this.body = \"\";\n          this.title = \"\";\n          this.$emit(\"postCreated\", res.data);\n        })\n        .catch(err => console.error(err));\n    },\n    validForm() {\n      this.errors = {};\n      if (this.title.trim() === \"\") {\n        this.errors.title = \"Title\";\n      }\n      if (this.body.trim() === \"\") {\n        this.errors.body = \"Body\";\n      }\n      if (Object.keys(this.errors).length > 0) {\n        return false;\n      } else return true;\n    }\n  },\n  watch: {\n    editingPost(post) {\n      this.title = post.title;\n      this.body = post.body;\n      this.id = post.id;\n    }\n  }\n};\n</script>\n\n<style>\n.form {\n  margin: 50px;\n}\n.progress {\n  margin: 100px 0;\n}\n</style>\n"]}]}