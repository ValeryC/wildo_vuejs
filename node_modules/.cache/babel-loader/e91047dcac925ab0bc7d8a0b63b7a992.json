{"remainingRequest":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/babel-loader/lib/index.js!/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/src/components/PostForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/src/components/PostForm.vue","mtime":1602613302488},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/wildocodak/classsed-vue-0260/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PostService from \"../PostService\";\nvar postService = new PostService();\nexport default {\n  name: \"PostForm\",\n  props: {\n    editingPost: Object\n  },\n  data: function data() {\n    return {\n      loading: false,\n      title: \"\",\n      body: \"\",\n      id: null,\n      errors: {}\n    };\n  },\n  methods: {\n    onSubmit: function onSubmit() {\n      var _this = this;\n\n      this.loading = true;\n\n      if (!this.validForm()) {\n        this.loading = false;\n        return;\n      }\n\n      var post = {\n        title: this.title,\n        body: this.body,\n        id: this.id\n      };\n      postService.writePost(post).then(function (res) {\n        _this.loading = false;\n        _this.body = \"\";\n        _this.title = \"\";\n\n        _this.$emit(\"postCreated\", res.data);\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    },\n    validForm: function validForm() {\n      this.errors = {};\n\n      if (this.title.trim() === \"\") {\n        this.errors.title = \"Title\";\n      }\n\n      if (this.body.trim() === \"\") {\n        this.errors.body = \"Body\";\n      }\n\n      if (Object.keys(this.errors).length > 0) {\n        return false;\n      } else return true;\n    }\n  },\n  watch: {\n    editingPost: function editingPost(post) {\n      this.title = post.title;\n      this.body = post.body;\n      this.id = post.id;\n    }\n  }\n};",{"version":3,"sources":["PostForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,WAAA;AACA,IAAA,WAAA,GAAA,IAAA,WAAA,EAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA,EAHA;AAIA,MAAA,EAAA,EAAA,IAJA;AAKA,MAAA,MAAA,EAAA;AALA,KAAA;AAOA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;;AACA,UAAA,CAAA,KAAA,SAAA,EAAA,EAAA;AACA,aAAA,OAAA,GAAA,KAAA;AACA;AACA;;AACA,UAAA,IAAA,GAAA;AACA,QAAA,KAAA,EAAA,KAAA,KADA;AAEA,QAAA,IAAA,EAAA,KAAA,IAFA;AAGA,QAAA,EAAA,EAAA,KAAA;AAHA,OAAA;AAMA,MAAA,WAAA,CACA,SADA,CACA,IADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,EAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,aAAA,EAAA,GAAA,CAAA,IAAA;AACA,OAPA,EAQA,KARA,CAQA,UAAA,GAAA;AAAA,eAAA,OAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AAAA,OARA;AASA,KAtBA;AAuBA,IAAA,SAvBA,uBAuBA;AACA,WAAA,MAAA,GAAA,EAAA;;AACA,UAAA,KAAA,KAAA,CAAA,IAAA,OAAA,EAAA,EAAA;AACA,aAAA,MAAA,CAAA,KAAA,GAAA,OAAA;AACA;;AACA,UAAA,KAAA,IAAA,CAAA,IAAA,OAAA,EAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,GAAA,MAAA;AACA;;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,KAAA,MAAA,EAAA,MAAA,GAAA,CAAA,EAAA;AACA,eAAA,KAAA;AACA,OAFA,MAEA,OAAA,IAAA;AACA;AAlCA,GAdA;AAkDA,EAAA,KAAA,EAAA;AACA,IAAA,WADA,uBACA,IADA,EACA;AACA,WAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AACA,WAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,WAAA,EAAA,GAAA,IAAA,CAAA,EAAA;AACA;AALA;AAlDA,CAAA","sourcesContent":["<template>\n  <form v-if=\"!loading\" class=\"form\" @submit.prevent=\"onSubmit\">\n    <div class=\"input-field\">\n      <label for=\"title\">Title</label>\n      <input\n        type=\"text\"\n        name=\"title\"\n        v-model=\"title\"\n        :class=\"[errors.title ? 'invalid' : 'validate']\"\n      >\n      <span class=\"helper-text\" data-error=\"Title must not be empty\"></span>\n    </div>\n    <div class=\"input-field\">\n      <label for=\"body\">Body</label>\n      <input type=\"text\" name=\"body\" v-model=\"body\" :class=\"[errors.body ? 'invalid' : 'validate']\">\n      <span class=\"helper-text\" data-error=\"Body must not be empty\"></span>\n    </div>\n    <button type=\"submit\" class=\"waves-effect waves-light btn\">{{ id ? 'Update' : 'Add'}}</button>\n  </form>\n  <div class=\"progress\" v-else-if=\"loading\">\n    <div class=\"indeterminate\"></div>\n  </div>\n</template>\n\n<script>\nimport PostService from \"../PostService\";\nconst postService = new PostService();\n\nexport default {\n  name: \"PostForm\",\n  props: {\n    editingPost: Object\n  },\n  data() {\n    return {\n      loading: false,\n      title: \"\",\n      body: \"\",\n      id: null,\n      errors: {}\n    };\n  },\n  methods: {\n    onSubmit() {\n      this.loading = true;\n      if (!this.validForm()) {\n        this.loading = false;\n        return;\n      }\n      const post = {\n        title: this.title,\n        body: this.body,\n        id: this.id\n      };\n\n      postService\n        .writePost(post)\n        .then(res => {\n          this.loading = false;\n          this.body = \"\";\n          this.title = \"\";\n          this.$emit(\"postCreated\", res.data);\n        })\n        .catch(err => console.error(err));\n    },\n    validForm() {\n      this.errors = {};\n      if (this.title.trim() === \"\") {\n        this.errors.title = \"Title\";\n      }\n      if (this.body.trim() === \"\") {\n        this.errors.body = \"Body\";\n      }\n      if (Object.keys(this.errors).length > 0) {\n        return false;\n      } else return true;\n    }\n  },\n  watch: {\n    editingPost(post) {\n      this.title = post.title;\n      this.body = post.body;\n      this.id = post.id;\n    }\n  }\n};\n</script>\n\n<style>\n.form {\n  margin: 50px;\n}\n.progress {\n  margin: 100px 0;\n}\n</style>\n"],"sourceRoot":"src/components"}]}